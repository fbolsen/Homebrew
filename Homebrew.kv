#:kivy 1.0.9

<MyGraph>:

<RadioButton@ToggleButton>:
    allow_no_selection: False


<TimeWidget>:
    orientation: 'vertical'
    RadioButton:
        group: 'mygroup'
        #allow_no_selection: False
        text: 'time'
        state: 'down'
        id: tgl_time
        on_press: root.set_mode(self.text)
    RadioButton:
        group: 'mygroup'
        #allow_no_selection: False
        text: 'elapsed'
        on_press: root.set_mode(self.text)
    RadioButton:
        group: 'mygroup'
        #allow_no_selection: False
        text: 'remaining'
        on_press: root.set_mode(self.text)
    Label:
        id: lbl_time
        text: '12:00'

<TempWidget>:
    orientation: 'horizontal'
    #size_hint: (1.0, 0.2)
    BoxLayout:
        orientation: 'vertical'
        size_hint: (None, 1.0)
        width: 100
        Button:
            text: 'Up:'
            on_press: root.up()
        Button:
            text: 'Down'
            on_press: root.down()
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Target:'
        Label:
            id: lbl_setpoint
            text: str(root.setpoint)
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Temp:'
        Label:
            id: lbl_temp
            text: "{0:.2f}".format(root.temp)

<PIDWidget>:
    #orientation: 'horizontal'
    #size_hint: (None, 1.0)
    #BoxLayout:
    orientation: 'vertical'
    size_hint: (None, 1.0)
    width: 800

    BoxLayout:
        Label:
            text: 'Kp:'
        Label:
            id: lbl_Kp
            text: "{0:.6g}".format(root.Kp)
        Slider:
            id: sl_Kp
            min: 0.0
            max: 100.0
            value: root.Kp
            on_value: root.update_Kp()
    BoxLayout:
        Label:
            text: 'Ki:'
        Label:
            id: lbl_Ki
            text: "{0:.6g}".format(root.Ki)
        Slider:
            id: sl_Ki
            min: 0.0
            max: 100.0
            value: root.Ki
            on_value: root.update_Ki()
    BoxLayout:
        Label:
            text: 'Kd:'
        Label:
            id: lbl_Kd
            text: "{0:.6g}".format(root.Kd)
        Slider:
            id: sl_Kd
            min: 0.0
            max: 100.0
            value: root.Kd
            on_value: root.update_Kd()
    BoxLayout:
        Label:
            text: 'Bias:'
        Label:
            id: lbl_Bias
            text: "{0:.6g}".format(root.Bias)
        Slider:
            id: sl_Bias
            min: 0.0
            max: 100.0
            value: 0.0
            on_value: root.update_Bias()
    Button:
        id: pid_reset
        text: 'Reset'
        on_press: root.pid_reset()


<PWMWidget>:
    orientation: 'vertical'

    BoxLayout:
        orientation: 'horizontal'
        Label:
            text: 'test'
            size_hint_x: 0.8
        CheckBox:
            id: chk_override
            text: 'Override PID'
            size_hint_x: 0.2
            on_press: root.toggle()
            canvas.before:
                #Color:
                #    rgba: 1, .5, 0, 1
                #Rectangle:
                #    pos: self.pos
                #    size: self.size
    BoxLayout:
        orientation: 'horizontal'
        Label:
            text: 'Power:'
        Label:
            id: lbl_power
            text: "{0:.2f}".format(root.power)
    Slider:
        id: sl_power
        min: 0.0
        max: 100.0
        value: root.power
        on_value: root.update_power()



<Homebrew>:
    #size: (300,200)
    id: bl
    orientation: 'vertical'
    temp_widget: temp_w
    pid_widget: pid_w
    pwm_widget: pwm_w
    time_widget: time_w
    app_mode: 'Simulation mode'

    BoxLayout:
        size_hint: (1.0, 0.05)
        #height: root.height/20
        #pos: (0, root.top - self.height)
        RadioButton:
            id: btn_simulation
            size_hint: (1.0, 1.0)
            #width: root.width/3
            text: 'Simulation mode'
            group: 'mode'
            #state: 'down'
            on_state: root.change_appmode(self.text)
        RadioButton:
            id: btn_cloud
            size_hint: (1.0, 1.0)
            text: 'Particle cloud'
            group: 'mode'
            on_state: root.change_appmode(self.text)
        RadioButton:
            id: btn_serial
            size_hint: (1.0, 1.0)
            text: 'USB/serial'
            state: 'down'
            group: 'mode'
            on_state: root.change_appmode(self.text)
    BoxLayout:
        id: bl_top
        orientation: 'horizontal'
        size_hint: (1.0, 0.05)
        Button:
            id: btn_connect
            text: 'Connect'
            on_press: root.connect()
            #disabled: True
            background_color: [1,0,0,1]
            #color: 1, .3, .4, .85
        Button:
            id: btn_start
            #color: 0,1,0,1 #text color
            #background_normal: ''
            #background_color: 1,1,0,1
            text: 'Start mash'
            on_press: root.start_mash()
        Button:
            id: btn_stop
            text: 'Stop mash'
            on_press: root.stop_mash()
    BoxLayout:
        size_hint: (1.0, 0.1)
        #Label:
        #    text: 'Temps'
        TempWidget:
            id: temp_w
        TimeWidget:
            id: time_w
    BoxLayout:
        id: bl_plot
        size_hint: (1.0, 0.5)
        BoxLayout:
            orientation: 'vertical'
            size_hint_x: 0.1
            Label:
                text: 'Auto on/off'
            Switch:
                id: sw_auto
                on_active: root.auto_scale(self, self.active)
            TextInput:
                id: txt_max
                multiline: False
                on_text_validate: root.set_ymax(self, self.text)
            TextInput:
                id: txt_min
                multiline: False
                on_text_validate: root.set_ymin(self, self.text)
        MyGraph:
            id: temp_graph
    BoxLayout:
        orientation: 'horizontal'
        id: bl_bottom
        size_hint: (1.0, 0.1)
        PIDWidget:
            id: pid_w
        PWMWidget:
            id: pwm_w